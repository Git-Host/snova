#summary C4 Plugin在Heroku上的部署配置说明.
#labels Featured,Phase-Support

= Step 1: 准备Heroku SDK环境 =
按照Heroku官方的[http://devcenter.heroku.com/articles/quickstart QuickStart]注册帐号，安装SDK（注册较简单，仅需要email）

= Step 2: 部署Snova C4 Plugin的服务端到Heroku =
  * 下载`snova-c4-heroku-serverr-[version].zip`， 在任意目录下解压
  * 在命令行下进入解压的目录，依次顺序执行以下的命令,每一行单独执行
    {{{
       heroku login
       git init
       git add .
       git commit -m "init"
       heroku create --stack cedar
       git push heroku master
    }}}
  * 留意执行“heroku create --stack cedar”时的输出，一般会显示创建的域名，为 "xx.herokuapp.com", 记下该域名，为配置Client准备（该域名也可登录Heroku的Web找到）
    
= Step 3: 配置客户端 =
客户端可选gsnova(Go)或者snova(Java)
==gsnova(Go)==
  * 修改gsnova.conf中C4部分，填入之前创建的域名，重启gsnova生效
    {{{
     [C4]
     #Enable改为1，C4才能生效，默认为0关闭
     Enable=1
     #修改domain为Step2创建的域名, 可加多个域名
     WorkerNode[0]=xyz.herokuapp.com
     WorkerNode[1]=xyz.cloudfoundry.com
    }}}
  * 修改gsnova.conf中SPAC下默认的Proxy实现为C4
    {{{    
     [SPAC]
     Enable=1
     #默认Proxy实现，初始为GAE
     Default=C4
    }}}
==snova(Java)==
  * 从snova-0.12.0120开始自动集成c4 plugin，无需单独安装
  * 修改`<snova>/plugins/c4/conf/c4-client.conf`
    {{{
       [C4]
       #修改domain为Step2创建的域名, 可加多个域名
       WorkerNode[0]=xyz.herokuapp.com
       WorkerNode[1]=xyz.cloudfoundry.com
    }}}
  * 修改`<snova>/conf/snova.conf`，将C4改为默认proxy实现(可选)
   {{{
      [Framework]
      .........
      ##Can choose in plugins, default is GAE
      ProxyService=C4
    }}}

= Step 5: 与SPAC集成（可选） =
  * 在SPAC的解释语言中，heroku被定义为$HEROKU="Heroku"
  * 参考SPAC的说明[http://code.google.com/p/snova/wiki/SpecialProxyAutoConfig SpecialProxyAutoConfig]修改`SelectProxy`方法打造自己的proxy环境
  